local WIDTH = tonumber(sys.get_config("display.width"))
local HEIGHT = tonumber(sys.get_config("display.height"))

local BROADSOCK = msg.url("geometrywars:/broadsock#script")

local ROAMER_DIED = hash("roamer_died")

local function random_position()
	return vmath.vector3(math.random(WIDTH), math.random(HEIGHT), 0)
end


local FACTORIES = {
	player = { url = "factories#player" },
	bullet = { url = "factories#bullet" },
	black_hole = { url = "factories#black_hole" },
	roamer = { url = "factories#roamer", respawn = true },
	chaser = { url = "factories#chaser", respawn = true },
}


function init(self)
	math.randomseed(os.time())
end

local function explosion(self, p)
	local o = factory.create("/factories#force", p)
	
	local sprite_url = msg.url(nil, o, "sprite")
	sprite.set_constant(sprite_url, "rotation", vmath.vector4(1, 5, 0, 0))
	go.set_scale(vmath.vector3(0.1), o)
	go.animate(o, "scale", go.PLAYBACK_ONCE_FORWARD, vmath.vector3(0.3), go.EASING_OUTCIRC, 0.3, 0, function()
		go.delete(o)
	end)
	
	go.set_position(p, "/particlefx")
	particlefx.play("/particlefx#explosion")
	
end

function on_message(self, message_id, message, sender)
	if message_id == hash("connect") then
		self.controller = sender
		self.session = {
			ip = message.ip,
			port = message.port,
			player_session_id = message.player_session_id,
		}

		msg.post(BROADSOCK, "connect", { ip = message.ip, port = message.port })
	elseif message_id == hash("connected") then
		if sender == BROADSOCK then
			for type,data in pairs(FACTORIES) do
				msg.post(BROADSOCK, "register_factory", { url = data.url, type = type })
			end
			if self.session.player_session_id then
				msg.post(BROADSOCK, "send_message", { "GL_CLAIM_PLAYER_SESSION", self.session.player_session_id })
			else
				msg.post("#", "start")
			end
		end
	elseif message_id == hash("message") then
		if sender == BROADSOCK then
			if message.event == "GL_CLAIM_PLAYER_SESSION_SUCCESS" then
				msg.post("#", "start")
			elseif message.event == "GL_CLAIM_PLAYER_SESSION_FAILED" then
				msg.post(self.controller, "disconnected")
			end
		end
	elseif message_id == hash("start") then
		factory.create(FACTORIES.player.url, random_position(), nil, { remote = false })
		factory.create(FACTORIES.roamer.url, random_position(), nil, { remote = false })
		factory.create(FACTORIES.roamer.url, random_position(), nil, { remote = false })
		factory.create(FACTORIES.roamer.url, random_position(), nil, { remote = false })
		factory.create(FACTORIES.chaser.url, random_position(), nil, { remote = false })
		self.black_hole_id = factory.create(FACTORIES.black_hole.url, random_position(), nil, { remote = false })
	elseif message_id == hash("destroyed") then
		local data = FACTORIES[message.type]
		if message.position then
			explosion(self, message.position)
		end
		if data.respawn then
			factory.create(data.url, go.get_position(self.black_hole_id), nil, { remote = false })
		end
		
	elseif message_id == hash("disconnected") then
		if sender == BROADSOCK then
			msg.post(self.controller, "disconnected")
		end
	end
end
